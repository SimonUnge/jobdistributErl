#!/bin/bash

green=$(tput setaf 2)
red=$(tput setaf 1)
bold=$(tput bold)
normal=$(tput sgr0)
export TMPDIR=$(mktemp -d temp.XXXXXXXX)

create_dots() {
    local dots
    for (( i=0; i<${1}; i++))
    do
        dots+="."
    done
    echo ${dots}
}

wait_for_command_to_finish() {
    while [ ! -e $TMPDIR/cmd_status ]
    do
        printf ""
    done
}

check_status_of_command() {
    local status
    if [ $(cat $TMPDIR/cmd_status) == "s" ]; then
        status="${bold}${green}PASSED${normal}"
    else
        status="${bold}${red}FAILED${normal}"
    fi
    echo ${status}
}

step_clean_up() {
    rm $TMPDIR/cmd_status
}

install_clean_up() {
    rm -r $TMPDIR
}

print_step_status() {
    local step_length=$(expr "${1}" : '.*')
    let number_of_dots_needed=40-${step_length}

    local dots=$(create_dots ${number_of_dots_needed})

    printf "%s%s" "${1}" "${dots}"
    wait_for_command_to_finish

    local status=$(check_status_of_command)
    printf "%s\n" "${status}"

    step_clean_up
}

run_cmd() {
    ${1} &> /dev/null
    if [ ${?} -eq 0 ]; then
        echo "s" > $TMPDIR/cmd_status
    else
        echo "f" > $TMPDIR/cmd_status
    fi
}

check_dependencies() {
    run_cmd "hash rebar" &
    print_step_status "Check dependencies"
}

compile() {
    run_cmd "make all" &
    print_step_status "Compiling"
}

run_unit_tests() {
    run_cmd "make eunit" &
    print_step_status "Unit tests"
}

run_function_tests() {
    run_cmd "make ct" &
    print_step_status "Function tests"
}

check_installation_status() {
    if [ ${1} -eq 0 ]; then
        echo "Installation completed, have fun."
    else
        echo "Installation failed, please check logs"
    fi
}

run_install() {
    local installation_status

    for step in check_dependencies \
                compile \
                run_unit_tests \
                run_function_tests
    do
        ${step}
        installation_status=${?}
    done
    check_installation_status ${installation_status}
    install_clean_up 
}
run_install
